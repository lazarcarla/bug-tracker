{"ast":null,"code":"var _jsxFileName = \"/Users/carlalazar/proiect-bug-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport RoleSelectionPage from './roleSelection/roleSelectionPage';\nimport LoginPage from './login/login';\nimport BugManagementPage from './verificator/verificator';\nimport ProgrammerPage from './programator/programator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedRole, setSelectedRole] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [bugs, setBugs] = useState([]);\n  const handleRoleSelection = role => {\n    setSelectedRole(role);\n  };\n  const handleLogin = (username, password) => {\n    // Verificați username-ul și parola aici și faceți autentificarea\n    // Setează isLoggedIn pe true dacă autentificarea este reușită\n    setIsLoggedIn(true);\n    setBugs([{\n      id: 1,\n      title: 'Bug 1',\n      description: 'Descriere bug 1'\n    }, {\n      id: 2,\n      title: 'Bug 2',\n      description: 'Descriere bug 2'\n    }\n    // Adăugați aici mai multe bug-uri dacă este necesar\n    ]);\n  };\n  const handleDeleteBug = bugId => {\n    // Elimină bug-ul din lista de bug-uri\n    const updatedBugs = bugs.filter(bug => bug.id !== bugId);\n    setBugs(updatedBugs);\n    // Aici puteți adăuga logica pentru a actualiza și lista de bug-uri pe server, dacă este necesar\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setSelectedRole('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!isLoggedIn ? !selectedRole ? /*#__PURE__*/_jsxDEV(RoleSelectionPage, {\n      onSelectRole: handleRoleSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this) : selectedRole === 'verificator' ? /*#__PURE__*/_jsxDEV(BugManagementPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(ProgrammerPage, {\n      bugs: bugs,\n      onDeleteBug: handleDeleteBug\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9ZTm04GmeR2lgklsb5zblRVcJFE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RoleSelectionPage","LoginPage","BugManagementPage","ProgrammerPage","jsxDEV","_jsxDEV","App","_s","selectedRole","setSelectedRole","isLoggedIn","setIsLoggedIn","bugs","setBugs","handleRoleSelection","role","handleLogin","username","password","id","title","description","handleDeleteBug","bugId","updatedBugs","filter","bug","handleLogout","className","children","onSelectRole","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onDeleteBug","onClick","_c","$RefreshReg$"],"sources":["/Users/carlalazar/proiect-bug-tracker/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport RoleSelectionPage from './roleSelection/roleSelectionPage';\nimport LoginPage from './login/login';\nimport BugManagementPage from './verificator/verificator';\nimport ProgrammerPage from './programator/programator';\n\nfunction App() {\n  const [selectedRole, setSelectedRole] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [bugs, setBugs] = useState([]);\n\n  const handleRoleSelection = (role) => {\n    setSelectedRole(role);\n  };\n\n  const handleLogin = (username, password) => {\n    // Verificați username-ul și parola aici și faceți autentificarea\n    // Setează isLoggedIn pe true dacă autentificarea este reușită\n    setIsLoggedIn(true);\n    setBugs([\n      { id: 1, title: 'Bug 1', description: 'Descriere bug 1' },\n      { id: 2, title: 'Bug 2', description: 'Descriere bug 2' },\n      // Adăugați aici mai multe bug-uri dacă este necesar\n    ]);\n  };\n  const handleDeleteBug = (bugId) => {\n    // Elimină bug-ul din lista de bug-uri\n    const updatedBugs = bugs.filter((bug) => bug.id !== bugId);\n    setBugs(updatedBugs);\n    // Aici puteți adăuga logica pentru a actualiza și lista de bug-uri pe server, dacă este necesar\n  };\n\n  const handleLogout = () =>{\n    setIsLoggedIn(false);\n    setSelectedRole('');\n  }\n\n  return (\n    <div className=\"App\">\n      {!isLoggedIn ? (\n        !selectedRole ? (\n          <RoleSelectionPage onSelectRole={handleRoleSelection} />\n        ) : (\n          <LoginPage onLogin={handleLogin} />\n        )\n      ) : (\n        selectedRole === 'verificator' ? (\n          <BugManagementPage />\n        ) : (\n          <ProgrammerPage bugs={bugs} onDeleteBug={handleDeleteBug} />\n        )\n      )}\n      {isLoggedIn && <button onClick={handleLogout}>Logout</button>}\n    </div>\n  );\n}\n\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,cAAc,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMe,mBAAmB,GAAIC,IAAI,IAAK;IACpCN,eAAe,CAACM,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C;IACA;IACAP,aAAa,CAAC,IAAI,CAAC;IACnBE,OAAO,CAAC,CACN;MAAEM,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,OAAO;MAAEC,WAAW,EAAE;IAAkB,CAAC,EACzD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,OAAO;MAAEC,WAAW,EAAE;IAAkB;IACxD;IAAA,CACD,CAAC;EACJ,CAAC;EACD,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjC;IACA,MAAMC,WAAW,GAAGZ,IAAI,CAACa,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACP,EAAE,KAAKI,KAAK,CAAC;IAC1DV,OAAO,CAACW,WAAW,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAK;IACxBhB,aAAa,CAAC,KAAK,CAAC;IACpBF,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACEJ,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjB,CAACnB,UAAU,GACV,CAACF,YAAY,gBACXH,OAAA,CAACL,iBAAiB;MAAC8B,YAAY,EAAEhB;IAAoB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAExD7B,OAAA,CAACJ,SAAS;MAACkC,OAAO,EAAEnB;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnC,GAED1B,YAAY,KAAK,aAAa,gBAC5BH,OAAA,CAACH,iBAAiB;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAErB7B,OAAA,CAACF,cAAc;MAACS,IAAI,EAAEA,IAAK;MAACwB,WAAW,EAAEd;IAAgB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAE9D,EACAxB,UAAU,iBAAIL,OAAA;MAAQgC,OAAO,EAAEV,YAAa;MAAAE,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV;AAAC3B,EAAA,CAjDQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}