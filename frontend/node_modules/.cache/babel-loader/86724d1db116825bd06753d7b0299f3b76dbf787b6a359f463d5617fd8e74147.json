{"ast":null,"code":"var _jsxFileName = \"/Users/carlalazar/proiect-bug-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport RoleSelectionPage from './roleSelection/roleSelectionPage';\nimport LoginPage from './login/login';\nimport BugManagementPage from './verificator/verificator';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedRole, setSelectedRole] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleRoleSelection = role => {\n    setSelectedRole(role);\n  };\n  const handleLogin = (username, password) => {\n    // Verificați username-ul și parola aici și faceți autentificarea\n    // Setează isLoggedIn pe true dacă autentificarea este reușită\n    setIsLoggedIn(true);\n  };\n\n  // return (\n  //   <div className=\"App\">\n  //     {!selectedRole ? (\n  //       <RoleSelectionPage onSelectRole={handleRoleSelection} />\n  //     ) : (\n  //       <LoginPage onLogin={handleLogin} />\n  //     )}\n  //   </div>\n  // );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: selectedRole === 'verificator' ? /*#__PURE__*/_jsxDEV(BugManagementPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bun venit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ciXfCV8VDr9PghyFqm+GcQ6Qi58=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RoleSelectionPage","LoginPage","BugManagementPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedRole","setSelectedRole","isLoggedIn","setIsLoggedIn","handleRoleSelection","role","handleLogin","username","password","className","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlalazar/proiect-bug-tracker/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport RoleSelectionPage from './roleSelection/roleSelectionPage';\nimport LoginPage from './login/login';\nimport BugManagementPage from './verificator/verificator';\n\nfunction App() {\n  const [selectedRole, setSelectedRole] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleRoleSelection = (role) => {\n    setSelectedRole(role);\n  };\n\n  const handleLogin = (username, password) => {\n    // Verificați username-ul și parola aici și faceți autentificarea\n    // Setează isLoggedIn pe true dacă autentificarea este reușită\n    setIsLoggedIn(true);\n  };\n\n  // return (\n  //   <div className=\"App\">\n  //     {!selectedRole ? (\n  //       <RoleSelectionPage onSelectRole={handleRoleSelection} />\n  //     ) : (\n  //       <LoginPage onLogin={handleLogin} />\n  //     )}\n  //   </div>\n  // );\n  return (\n    <div className=\"App\">\n      {!isLoggedIn ? (\n        <LoginPage onLogin={handleLogin} />\n      ) : (\n        <>\n          {selectedRole === 'verificator' ? (\n            <BugManagementPage />\n          ) : (\n            <h1>Bun venit!</h1>\n          )}\n        </>\n      )}\n    </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,iBAAiB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,mBAAmB,GAAIC,IAAI,IAAK;IACpCJ,eAAe,CAACI,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C;IACA;IACAL,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACER,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjB,CAACR,UAAU,gBACVP,OAAA,CAACH,SAAS;MAACmB,OAAO,EAAEL;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEnCpB,OAAA,CAAAE,SAAA;MAAAa,QAAA,EACGV,YAAY,KAAK,aAAa,gBAC7BL,OAAA,CAACF,iBAAiB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAErBpB,OAAA;QAAAe,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IACnB,gBACD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV;AAAChB,EAAA,CAvCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}